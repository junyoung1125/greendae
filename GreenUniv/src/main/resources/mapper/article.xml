<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.greenuniv.greenuniv.dao.mapper.ArticleMapper">
  <resultMap id="articleMap" type="com.greenuniv.greenuniv.dto.article.ArticleDTO">
    <id property="id" column="article_id"/>
    <result property="title" column="article_title"/>
    <result property="category" column="article_category"/>
    <result property="status" column="article_status"/>
    <result property="content" column="article_content"/>
    <result property="view" column="article_view"/>
    <result property="content" column="article_content"/>
    <result property="registerDate" column="article_register_date"/>
    <collection property="user" resultMap="com.greenuniv.greenuniv.dao.mapper.UserMapper.userMap"/>
  </resultMap>

  <insert id="insert" parameterType="com.greenuniv.greenuniv.dto.article.ArticleDTO">
    INSERT INTO `article` (`user_id`, `title`, `category`, `status`, `content`, register_date)
    VALUES (#{user.id}, #{title}, #{category}, #{status}, #{content}, NOW());
  </insert>

  <select id="selectAll" resultMap="articleMap">
    SELECT
    `artcl`.id AS `article_id`,
    `artcl`.title AS `article_title`,
    `artcl`.category AS `article_category`,
    `artcl`.`status` AS `article_status`,
    `artcl`.content AS `article_content`,
    `artcl`.`view` AS `article_view`,
    `artcl`.register_date AS `article_register_date`,
    `user`.id AS `user_id`,
    `user`.`name` AS `user_name`
    FROM `article` AS `artcl`
    JOIN `user`
    ON `user`.id = `artcl`.user_id
    ORDER BY `artcl`.register_date DESC;
  </select>

  <select id="selectById" resultMap="articleMap">
    SELECT
    `artcl`.id AS `article_id`,
    `artcl`.title AS `article_title`,
    `artcl`.category AS `article_category`,
    `artcl`.`status` AS `article_status`,
    `artcl`.`view` AS `article_view`,
    `artcl`.`content` as `article_content`,
    `artcl`.register_date AS `article_register_date`,
    `user`.id AS `user_id`,
    `user`.`name` AS `user_name`
    FROM `article` AS `artcl`
    JOIN `user`
    ON `user`.id = `artcl`.user_id
    WHERE `artcl`.id = #{id};
  </select>

  <select id="selectAllBy" resultMap="articleMap">
    SELECT
    `artcl`.id AS `article_id`,
    `artcl`.title AS `article_title`,
    `artcl`.category AS `article_category`,
    `artcl`.`status` AS `article_status`,
    `artcl`.content AS `article_content`,
    `artcl`.`view` AS `article_view`,
    `artcl`.register_date AS `article_register_date`,
    `user`.id AS `user_id`,
    `user`.`name` AS `user_name`
    FROM `article` AS `artcl`
    JOIN `user`
    ON `user`.id = `artcl`.user_id
    ORDER BY `artcl`.register_date DESC
    WHERE `artcl`.${colName} = #{value};
  </select>

  <select id="selectLimit" resultMap="articleMap">
    SELECT
    `artcl`.id AS `article_id`,
    `artcl`.title AS `article_title`,
    `artcl`.category AS `article_category`,
    `artcl`.`status` AS `article_status`,
    `artcl`.content AS `article_content`,
    `artcl`.`view` AS `article_view`,
    `artcl`.register_date AS `article_register_date`,
    `user`.id AS `user_id`,
    `user`.`name` AS `user_name`
    FROM `article` AS `artcl`
    JOIN `user`
    ON `user`.id = `artcl`.user_id
    ORDER BY `artcl`.register_date DESC
    LIMIT #{limit} OFFSET #{offset};
  </select>

  <select id="selectByLimit" resultMap="articleMap">
    SELECT
    `artcl`.id AS `article_id`,
    `artcl`.title AS `article_title`,
    `artcl`.category AS `article_category`,
    `artcl`.`status` AS `article_status`,
    `artcl`.content AS `article_content`,
    `artcl`.`view` AS `article_view`,
    `artcl`.register_date AS `article_register_date`,
    `user`.id AS `user_id`,
    `user`.`name` AS `user_name`
    FROM `article` AS `artcl`
    JOIN `user`
    ON `user`.id = `artcl`.user_id
    WHERE `artcl`.${colName}=#{value}
    <if test="colName == 'category' and value == 'news'">
      OR `artcl`.${colName}="column"
    </if>
    <if test="colName == 'category' and value == 'column'">
      OR `artcl`.${colName}="news"
    </if>
    <!--
    <choose>
      <when test="colName.equalsIgnoreCase('category') and value.equalsIgnoreCase('news')">
        OR `artcl`.${colName}="column"
      </when>
      <when test="colName.equalsIgnoreCase('category') and value.equalsIgnoreCase('column')">
        OR `artcl`.${colName}="news"
      </when>
    </choose>
    -->
    ORDER BY `artcl`.register_date DESC
    LIMIT #{limit} OFFSET #{offset};
  </select>

  <select id="count" resultType="long">
    SELECT
    COUNT(`article`.id) AS `article_count`
    FROM `article`;
  </select>

  <select id="countBy" resultType="long">
    SELECT
    COUNT(`article`.id) AS `article_count_by`
    FROM `article`
    WHERE `article`.${colName} = #{value}
    <if test="colName == 'category' and value == 'news'">
      OR `article`.${colName}="column";
    </if>
    <if test="colName == 'category' and value == 'column'">
      OR `article`.${colName}="news";
    </if>
  </select>

  <update id="updateById" parameterType="com.greenuniv.greenuniv.dto.article.ArticleDTO">
    UPDATE `article`
    SET
    `title`=#{t.title},
    `category`=#{t.category},
    `content`=#{t.content},
    `view`=#{t.view},
    `register_date`=NOW()
    WHERE `id`=#{t.id};
  </update>

  <update id="updateByIdWhere">
    UPDATE `article` SET ${colName}= #{value} WHERE `id` = #{id};
  </update>

  <delete id="deleteById">
    DELETE FROM `article` WHERE `id`=#{id};
  </delete>
</mapper>
